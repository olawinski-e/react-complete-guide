{"version":3,"sources":["components/quotes/QuoteItem.module.css","components/quotes/QuoteList.module.css","components/quotes/NoQuotesFound.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","pages/AllQuotes.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingAsc","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","pathname","list","map","quote","NoQuotesFound","noQuotes","AllQuotes","useHttp","getAllQuotes","sendRequest","status","loadedQuotes","data","useEffect","LoadingSpinner","length"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,0B,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,6B,mBCA3DD,EAAOC,QAAU,CAAC,SAAW,kC,wFCkBdC,EAhBG,SAACC,GACjB,OACE,qBAAIC,UAAWC,IAAQC,KAAvB,UACE,mCACE,qCACE,4BAAIH,EAAMI,SAEZ,qCAAaJ,EAAMK,YAErB,cAAC,IAAD,CAAMJ,UAAU,MAAMK,GAAE,kBAAaN,EAAMO,IAA3C,iC,iBCyCSC,EAvCG,SAACR,GACjB,IAXkBS,EAAQC,EAWpBC,EAAUC,cACVC,EAAWC,cAIXC,EAA2C,QAF7B,IAAIC,gBAAgBH,EAASI,QAEhBC,IAAI,QAE/BC,GAlBYV,EAkBcT,EAAMS,OAlBZC,EAkBoBK,EAjBvCN,EAAOW,MAAK,SAACC,EAAQC,GAC1B,OAAIZ,EACKW,EAAOd,GAAKe,EAAOf,GAAK,GAAK,EAE7Bc,EAAOd,GAAKe,EAAOf,GAAK,GAAK,MAuBxC,OACE,qCACE,qBAAKN,UAAWC,IAAQqB,QAAxB,SACE,yBAAQC,QAXe,WAC3Bb,EAAQc,KAAK,CACXC,SAAUb,EAASa,SACnBT,OAAO,SAAD,OAAWF,EAAe,OAAS,UAQvC,kBACQA,EAAe,aAAe,iBAGxC,oBAAId,UAAWC,IAAQyB,KAAvB,SACGR,EAAaS,KAAI,SAACC,GAAD,OAChB,cAAC,EAAD,CAEEtB,GAAIsB,EAAMtB,GACVF,OAAQwB,EAAMxB,OACdD,KAAMyB,EAAMzB,MAHPyB,EAAMtB,a,yCCrCVuB,EAAgB,WAC3B,OACE,sBAAK7B,UAAWC,IAAQ6B,SAAxB,UACE,iDACA,cAAC,IAAD,CAAMzB,GAAG,aAAaL,UAAU,MAAhC,6BC4BS+B,UA9BG,WAChB,MAIIC,YAAQC,KAAc,GAHxBC,EADF,EACEA,YACAC,EAFF,EAEEA,OACMC,EAHR,EAGEC,KAOF,OAJAC,qBAAU,WACRJ,MACC,CAACA,IAEW,YAAXC,EAEA,qBAAKnC,UAAU,WAAf,SACE,cAACuC,EAAA,EAAD,MAKS,cAAXJ,GAA4BC,GAAwC,IAAxBA,EAAaI,OAK3D,mCACE,cAAC,EAAD,CAAWhC,OAAQ4B,MALd,cAAC,EAAD","file":"static/js/5.c95653ec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2dOvb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3pzcl\",\"sorting\":\"QuoteList_sorting__rL6H1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noQuotes\":\"NoQuotesFound_noQuotes__19Py0\"};","import { Link } from \"react-router-dom\";\nimport classes from \"./QuoteItem.module.css\";\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className=\"btn\" to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { useHistory, useLocation } from \"react-router\";\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingAsc = queryParams.get(\"sort\") === \"asc\";\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAsc);\n\n  const changeSortingHandler = () => {\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${isSortingAsc ? \"desc\" : \"asc\"}`,\n    });\n    // history.push(`${location.pathname}?sort=${isSortingAsc ? \"desc\" : \"asc\"}`);\n  };\n\n  return (\n    <>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {isSortingAsc ? \"Descending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default QuoteList;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport classes from \"./NoQuotesFound.module.css\";\n\nexport const NoQuotesFound = () => {\n  return (\n    <div className={classes.noQuotes}>\n      <p>No quotes found!</p>\n      <Link to=\"/new-quote\" className=\"btn\">\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport { LoadingSpinner } from \"../components/UI/LoadingSpinner\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllQuotes } from \"../lib/api\";\nimport { NoQuotesFound } from \"../components/quotes/NoQuotesFound\";\n\nconst AllQuotes = () => {\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n  } = useHttp(getAllQuotes, true);\n\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === \"completed\" && (!loadedQuotes || loadedQuotes.length === 0)) {\n    return <NoQuotesFound />;\n  }\n\n  return (\n    <>\n      <QuoteList quotes={loadedQuotes} />\n    </>\n  );\n};\n\nexport default AllQuotes;\n"],"sourceRoot":""}